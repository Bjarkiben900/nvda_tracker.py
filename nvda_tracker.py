import streamlit as st
import yfinance as yf
import datetime
import openai

# --- STILLINGAR ---
st.set_page_config(page_title="NVIDIA Hlutabr√©fa Tracker", layout="centered")

# --- TITILL ---
st.title("üìà NVIDIA Hlutabr√©fa Tracker + AI Greining")

# --- DAGSETNINGAR FYRIR GRAF ---
end = datetime.date.today()
start = end - datetime.timedelta(days=30)

# --- HLUTABR√âFA G√ñGN ---
ticker = "NVDA"
data = yf.download(ticker, start=start, end=end)

# --- GRAF ---
st.subheader("Ver√∞s√∫ga s√≠√∞ustu 30 daga")
st.line_chart(data['Close'])

# --- N√öVERANDI VER√ê ---
latest_price = data['Close'][-1]
previous_price = data['Close'][-2]
change = latest_price - previous_price
percent = (change / previous_price) * 100

st.metric(label="NVIDIA Loka√∞i (lokadagur)", value=f"${latest_price:.2f}", delta=f"{change:.2f} ({percent:.2f}%)")

# --- AI GREINING (SIMPLIFIED MOCKUP) ---
def get_ai_explanation(price_change):
    if price_change > 2:
        return "Ver√∞i√∞ h√¶kka√∞i m√∂gulega √∫t af bjarts√Ωni um AI marka√∞inn og auknum fj√°rfestingum √≠ t√∂lvub√∫na√∞i."
    elif price_change < -2:
        return "Ver√∞i√∞ l√¶kka√∞i l√≠klega vegna neikv√¶√∞ra efnahagsfr√©tta √≠a√∞ v√∂n um minni AI-v√∂xt."
    else:
        return "Engin st√≥r ver√∞breyting - markar√∞urinn er stabiill um NVIDIA um √æessar mundir."

# --- AI SP√Å (mockup) ---
def get_ai_prediction():
    return "AI sp√°ir a√∞ n√¶stu vikur g√¶tu s√©√∞ aukningu √≠ ver√∞i vegna NVIDIA framlei√∞slufunda og AI-tengdra r√°√∞stefna."

st.subheader("üß† AI Sk√Ωring")
st.info(get_ai_explanation(change))

st.subheader("ü§î AI K√∫up-r√°√∞gj√∂f")
st.success(get_ai_prediction())

st.caption("Byggt af Bjarkiben900 x ChatGPT")
